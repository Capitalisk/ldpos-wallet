name: Create Release

on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

jobs:
  create-release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Get current date
        id: get_date
        run: echo "::set-output name=DATE::$(date +'%Y-%m-%d')"

      - name: Get the version
        id: get_version
        run: echo ::set-output name=VERSION::$(echo $GITHUB_REF | cut -d / -f 3)

      - name: Generate changelog
        id: changelog
        uses: metcalfc/changelog-generator@v1.0.0
        with:
          myToken: ${{ secrets.GITHUB_TOKEN }}

      - name: Get the changelog
        run: echo "${{ steps.changelog.outputs.changelog }}"

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ steps.get_version.outputs.VERSION }} - ${{ steps.get_date.outputs.DATE }}
          body: ${{ steps.changelog.outputs.changelog }}
          draft: false
          prerelease: false

  build:
    name: Upload Release Windows and Linux
    runs-on: ubuntu-18.04

    strategy:
      matrix:
        node-version: [14.x]

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install wine (for Windows build)
        run: |
          sudo dpkg --add-architecture i386
          wget -qO - https://dl.winehq.org/wine-builds/winehq.key | sudo apt-key add -
          sudo add-apt-repository ppa:cybermax-dexter/sdl2-backport
          sudo apt-add-repository "deb https://dl.winehq.org/wine-builds/ubuntu $(lsb_release -cs) main"
          sudo apt install --install-recommends winehq-stable

      - name: Install and build electron
        run: |
          npm i
          npm run electron:build:platforms
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Get the version
        id: get_version
        run: echo ::set-output name=VERSION::$(echo $GITHUB_REF | cut -d / -f 3)

      - uses: softprops/action-gh-release@v1
        with:
          files: |
            dist_electron/ldpos-wallet*mac.zip
            dist_electron/ldpos-wallet*-ia32.tar.gz
            dist_electron/ldpos-wallet*-x64.tar.gz
            dist_electron/ldpos-wallet*-amd64.deb
            dist_electron/ldpos-wallet*-i386.deb
            dist_electron/ldpos-wallet*-x86_64.AppImage
            dist_electron/ldpos-wallet*-i386.AppImage
            dist_electron/ldpos-wallet*-amd64.snap
            dist_electron/ldpos-wallet*.exe
            dist_electron/ldpos-wallet*.exe.blockmap
            dist_electron/ldpos-wallet*-ia32.nsis.7z
            dist_electron/ldpos-wallet*-x64.nsis.7z
            dist_electron/ldpos-wallet*-win-ia32.zip
            dist_electron/ldpos-wallet*-win-x64.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CYPRESS_INSTALL_BINARY: 0

  build-mac:
    name: Upload Release Mac
    runs-on: macos-latest

    strategy:
      matrix:
        node-version: [14.x]

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install and build electron for mac
        run: |
          npm i
          npm run electron:build:mac
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CYPRESS_INSTALL_BINARY: 0

      - name: Get the version
        id: get_version
        run: echo ::set-output name=VERSION::$(echo $GITHUB_REF | cut -d / -f 3)

      - uses: softprops/action-gh-release@v1
        with:
          files: dist_electron/ldpos-wallet*.dmg
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  android:
    name: Upload Release android
    runs-on: ubuntu-18.04

    strategy:
      matrix:
        node-version: [14.x]

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install and build for Android
        # Create icons, not working, needed to do it manually via Android Studio...
        # npx cordova-res android --skip-config --copy --icon-background-source '#161a33'
        # Production use
        # ./gradlew assemble
        # mv android/app/build/outputs/apk/release/app-release-unsigned.apk android/app/build/outputs/apk/release/ldpos-wallet.apk
        run: |
          npm i
          npm run build
          npx cap copy android
          npx cap sync
          cd android
          ./gradlew assembleDebug
          cd ..
          mv android/app/build/outputs/apk/debug/app-debug.apk android/app/build/outputs/apk/debug/ldpos-wallet.apk
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_CONFIG_PREFIX: '~/.npm-global'
          CYPRESS_INSTALL_BINARY: 0

      - name: Get the version
        id: get_version
        run: echo ::set-output name=VERSION::$(echo $GITHUB_REF | cut -d / -f 3)

      - uses: softprops/action-gh-release@v1
        with:
          # Production use
          # files: android/app/build/outputs/apk/release/ldpos-wallet.apk
          files: android/app/build/outputs/apk/debug/ldpos-wallet.apk
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #
      # - uses: r0adkll/sign-android-release@v1
      #   name: Sign app APK
      #   # ID used to access action output
      #   id: sign_app
      #   with:
      #     releaseDirectory: app/build/outputs/apk/release
      #     signingKeyBase64: ${{ secrets.SIGNING_KEY }}
      #     alias: ${{ secrets.ALIAS }}
      #     keyStorePassword: ${{ secrets.KEY_STORE_PASSWORD }}
      #     keyPassword: ${{ secrets.KEY_PASSWORD }}
      #   env:
      #     # override default build-tools version (29.0.3) -- optional
      #     BUILD_TOOLS_VERSION: "30.0.2"
      # # Example use of `signedReleaseFile` output -- not needed
      # - uses: actions/upload-artifact@v2
      #   with:
      #     name: Signed app bundle
      #     path: ${{steps.sign_app.outputs.signedReleaseFile}}
      # - uses: r0adkll/upload-google-play@v1
      #   with:
      #     serviceAccountJsonPlainText: ${{ SERVICE_ACCOUNT_JSON }}
      #     packageName: com.ldposwallet.app
      #     releaseFiles: android/app/build/outputs/apk/release/app-release.aab
      #     track: production
      #     status: inProgress
      #     inAppUpdatePriority: 2
      #     userFraction: 0.33
      #     whatsNewDirectory: distribution/whatsnew
      #     mappingFile: app/build/outputs/mapping/release/mapping.txt
      #     debugSymbols: app/intermediates/merged_native_libs/release/out/lib
